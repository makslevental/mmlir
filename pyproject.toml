[build-system]
requires = [
    "PyYAML",
    "cmake>=3.28",
    "dataclasses",
    "mlir",
    "ninja",
    "numpy",
    "pybind11[global]>=2.10.4",
    "setuptools>=42",
    "wheel",
]
build-backend = "setuptools.build_meta"

[tool.cibuildwheel]
build-verbosity = 3
before-all = [
    "rm -rf {project}/build",
    "rm -rf *egg*",
]
manylinux-aarch64-image = "manylinux_2_28"

[tool.cibuildwheel.linux]
build = "cp38-* cp39-* cp310-* cp311-* cp312-*"
skip = ["*-manylinux_i686", "*-musllinux*"]
environment-pass = [
    "CIBW_ARCHS",
    "CMAKE_ARGS",
    "CMAKE_GENERATOR",
    "PIP_NO_BUILD_ISOLATION",
]
before-all = [
    "yum install -y epel-release && yum install -y ninja-build cmake gcc"
]
repair-wheel-command = [
    'LD_LIBRARY_PATH=$(python -c "import mlir; print(mlir.__path__[0])")/lib auditwheel repair -w {dest_dir} {wheel} --exclude libcuda.so.1 --exclude libvulkan.so.1'
]

[tool.cibuildwheel.macos]
build = "cp310-* cp311-* cp312-*"
before-build = [
    "pip install delocate-wheel",
]
repair-wheel-command = [
    'DYLD_FALLBACK_LIBRARY_PATH=$(python -c "import mlir; print(mlir.__path__[0])")/lib delocate-wheel --require-archs {delocate_archs} -w {dest_dir} -v {wheel}  --ignore-missing-dependencies'
]

[tool.cibuildwheel.windows]
build = "cp38-* cp39-* cp310-* cp311-* cp312-*"
skip = ["*-win32"]
before-build = [
    "pip install delvewheel",
]
repair-wheel-command = [
    "delvewheel repair -v -w {dest_dir} {wheel}"
]
